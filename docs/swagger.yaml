basePath: /api/v1
definitions:
  domains.Demo:
    properties:
      message:
        type: string
    type: object
  dto.AuthResponseBody:
    properties:
      token:
        type: string
      type:
        type: string
    type: object
  dto.ForgotPasswordRequestBody:
    properties:
      email:
        example: example@email.com
        type: string
    required:
    - email
    type: object
  dto.LoginRequestBody:
    properties:
      email:
        example: example@email.com
        type: string
      password:
        example: password
        maxLength: 30
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.MetaDataBody:
    properties:
      extension:
        type: string
      mime_type:
        type: string
      name:
        type: string
      path:
        type: string
      size:
        type: integer
    type: object
  dto.PresignedURLRequestBody:
    properties:
      size:
        example: 10485760
        type: integer
    required:
    - size
    type: object
  dto.PresignedURLResponseBody:
    properties:
      object_key:
        type: string
      url:
        type: string
    required:
    - object_key
    - url
    type: object
  dto.UploadDocumentRequestBody:
    properties:
      key:
        example: example.pdf
        type: string
      metadata:
        $ref: '#/definitions/dto.MetaDataBody'
    required:
    - key
    - metadata
    type: object
  dto.UserResponseBody:
    properties:
      created_at:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      pubkey:
        type: string
    type: object
  dto.VerifyTokenRequestBody:
    properties:
      token:
        example: token
        type: string
    required:
    - token
    type: object
  wrapper.FailResponse:
    properties:
      message:
        example: Example message
        type: string
      success:
        example: false
        type: boolean
    type: object
  wrapper.SuccessResponse:
    properties:
      data: {}
      metadata: {}
      success:
        example: true
        type: boolean
    type: object
info:
  contact: {}
  description: This is the API Document for WePress
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: WePress API
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Request To Reset Password
      parameters:
      - description: Forgot Password Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Forgot Password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Post Login
      parameters:
      - description: Login Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: token=jwt-token; Path=/; Secure
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AuthResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Post Login
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get User Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponseBody'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Get User Profile
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify Token
      parameters:
      - description: Token to verify
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyTokenRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Verify Token
      tags:
      - auth
  /demo:
    get:
      consumes:
      - application/json
      description: Get demo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domains.Demo'
              type: object
      security:
      - Bearer: []
      summary: Get demo
      tags:
      - demo
  /documents/request-upload:
    post:
      consumes:
      - application/json
      description: Generate Presigned URL For Upload Document
      parameters:
      - description: Presigned URL Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.PresignedURLRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PresignedURLResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Request Upload Document
      tags:
      - documents
  /documents/upload:
    post:
      consumes:
      - application/json
      description: Save Document
      parameters:
      - description: Upload Document Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UploadDocumentRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Save Document
      tags:
      - documents
securityDefinitions:
  AccessToken:
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer jwt_token_string`.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
