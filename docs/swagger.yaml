basePath: /api/v1
definitions:
  domains.Demo:
    properties:
      message:
        type: string
    type: object
  dto.AddPrinterRequestBody:
    properties:
      cluster_id:
        type: integer
      manufacturer:
        type: string
      model:
        type: string
      serial_number:
        type: string
      status:
        type: string
      uri:
        example: localhost:50001
        type: string
    type: object
  dto.AuthResponseBody:
    properties:
      token:
        type: string
      type:
        type: string
    type: object
  dto.ClusterBody:
    properties:
      added_at:
        type: string
      building:
        type: string
      campus:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      room:
        type: string
      status:
        type: string
      total_printers:
        type: integer
      updated_at:
        type: string
    type: object
  dto.ColorMode:
    enum:
    - color
    - greyscale
    type: string
    x-enum-varnames:
    - ColorModeColor
    - ColorModeGreyscale
  dto.DownloadDocumentResponseBody:
    properties:
      created_at:
        example: "2021-08-01T00:00:00Z"
        type: string
      id:
        example: d2728e88-aef1-4822-976a-63bdca2e89f9
        type: string
      metadata:
        $ref: '#/definitions/dto.MetaDataBody'
      updated_at:
        example: "2021-08-01T00:00:00Z"
        type: string
      url:
        example: https://bucket.s3-endpoint/object-key
        type: string
    required:
    - created_at
    - id
    - metadata
    - updated_at
    - url
    type: object
  dto.DownloadDocumentsResponseBody:
    properties:
      documents:
        items:
          $ref: '#/definitions/dto.DownloadDocumentResponseBody'
        type: array
    required:
    - documents
    type: object
  dto.ForgotPasswordRequestBody:
    properties:
      email:
        example: example@email.com
        type: string
    required:
    - email
    type: object
  dto.ListClusterResponseBody:
    properties:
      clusters:
        items:
          $ref: '#/definitions/dto.ClusterBody'
        type: array
      total_clusters:
        type: integer
    type: object
  dto.ListPrintJobResponseBody:
    properties:
      print_jobs:
        items:
          $ref: '#/definitions/dto.PrintJobResponseBody'
        type: array
    type: object
  dto.ListPrinterResponseBody:
    properties:
      printers:
        items:
          $ref: '#/definitions/dto.PrinterResponseBody'
        type: array
      total_printers:
        type: integer
    type: object
  dto.LoginRequestBody:
    properties:
      email:
        example: example@email.com
        type: string
      password:
        example: password
        maxLength: 30
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.MetaDataBody:
    properties:
      extension:
        example: pdf
        type: string
      mime_type:
        example: application/pdf
        type: string
      name:
        example: document
        type: string
      size:
        example: 10485760
        type: integer
    required:
    - extension
    - mime_type
    - name
    - size
    type: object
  dto.OauthCallbackRequestBody:
    properties:
      code:
        example: code
        type: string
      error:
        type: string
      provider:
        type: string
      state:
        example: state
        type: string
    required:
    - code
    - state
    type: object
  dto.OauthResponseBody:
    properties:
      url:
        type: string
    type: object
  dto.Orientation:
    enum:
    - portrait
    - landscape
    type: string
    x-enum-varnames:
    - OrientationPortrait
    - OrientationLandscape
  dto.PaperSize:
    enum:
    - a3
    - a4
    - a5
    - a2
    type: string
    x-enum-varnames:
    - PaperSizeA3
    - PaperSizeA4
    - PaperSizeA5
    - PaperSizeA2
  dto.PrintJobResponseBody:
    properties:
      document_id:
        type: string
      estimated_time:
        type: integer
      id:
        type: string
      job_status:
        type: string
      pages_printed:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.PrintSettings:
    properties:
      color_mode:
        $ref: '#/definitions/dto.ColorMode'
      copies:
        type: integer
      double_sided:
        type: boolean
      orientation:
        $ref: '#/definitions/dto.Orientation'
      paper_size:
        $ref: '#/definitions/dto.PaperSize'
    required:
    - color_mode
    - copies
    - double_sided
    - orientation
    - paper_size
    type: object
  dto.PrinterResponseBody:
    properties:
      added_at:
        type: string
      cluster_id:
        type: integer
      id:
        type: integer
      manufacturer:
        type: string
      model:
        type: string
      serial_number:
        type: string
      updated_at:
        type: string
      uri:
        type: string
    type: object
  dto.PrinterStatus:
    enum:
    - idle
    - printing
    - error
    - unspecified
    type: string
    x-enum-varnames:
    - PrinterStatusIdle
    - PrinterStatusPrinting
    - PrinterStatusError
    - PrinterStatusUnspecified
  dto.PrinterStatusResponseBody:
    properties:
      running_job:
        $ref: '#/definitions/dto.PrintJobResponseBody'
      status:
        $ref: '#/definitions/dto.PrinterStatus'
    type: object
  dto.RequestUploadResponseBody:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      object_key:
        type: string
      url:
        type: string
    required:
    - object_key
    - url
    type: object
  dto.SubmitPrintJobRequestBody:
    properties:
      cluster_id:
        type: integer
      document_id:
        type: string
      print_settings:
        $ref: '#/definitions/dto.PrintSettings'
    required:
    - cluster_id
    - document_id
    - print_settings
    type: object
  dto.UploadDocumentRequestBody:
    properties:
      key:
        example: 4b793c1a06ea4ea0a2b019e3c04c3f1d/c211f30fbc56484e83ca9f96afaaeb8b
        type: string
      metadata:
        $ref: '#/definitions/dto.MetaDataBody'
    required:
    - key
    - metadata
    type: object
  dto.UploadRequestBody:
    properties:
      size:
        example: 10485760
        type: integer
    required:
    - size
    type: object
  dto.UploadResponseBody:
    properties:
      id:
        type: string
      metadata:
        $ref: '#/definitions/dto.MetaDataBody'
    required:
    - id
    - metadata
    type: object
  dto.UserResponseBody:
    properties:
      created_at:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      pubkey:
        type: string
    type: object
  dto.VerifyTokenRequestBody:
    properties:
      token:
        example: token
        type: string
    required:
    - token
    type: object
  wrapper.FailResponse:
    properties:
      message:
        example: Example message
        type: string
      success:
        example: false
        type: boolean
    type: object
  wrapper.SuccessResponse:
    properties:
      data: {}
      metadata: {}
      success:
        example: true
        type: boolean
    type: object
info:
  contact: {}
  description: This is the API Document for WePress
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: WePress API
  version: "1.0"
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Request To Reset Password
      parameters:
      - description: Forgot Password Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: Forgot Password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Post Login
      parameters:
      - description: Login Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: token=jwt-token; Path=/; Secure
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AuthResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Post Login
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get User Profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponseBody'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Get User Profile
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Verify Token
      parameters:
      - description: Token to verify
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyTokenRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Verify Token
      tags:
      - auth
  /clusters/list:
    get:
      description: List All Clusters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListClusterResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: List All Clusters
      tags:
      - clusters
  /demo:
    get:
      consumes:
      - application/json
      description: Get demo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domains.Demo'
              type: object
      security:
      - Bearer: []
      summary: Get demo
      tags:
      - demo
  /documents/download:
    get:
      description: Download Document List
      parameters:
      - description: Page Number
        in: query
        name: page
        type: string
      - description: Documents Per Page
        in: query
        name: per_page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DownloadDocumentsResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Download Document List
      tags:
      - documents
  /documents/download/{id}:
    get:
      description: Download Document
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DownloadDocumentResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Download Document
      tags:
      - documents
  /documents/request-upload:
    post:
      consumes:
      - application/json
      description: Generate Presigned URL For Upload Document
      parameters:
      - description: Presigned URL Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UploadRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.RequestUploadResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Request Upload Document
      tags:
      - documents
  /documents/upload:
    post:
      consumes:
      - application/json
      description: Save Document
      parameters:
      - description: Upload Document Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UploadDocumentRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UploadResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Save Document
      tags:
      - documents
  /oauth/{provider}:
    get:
      consumes:
      - application/json
      description: Request Oauth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.OauthResponseBody'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Request Oauth
      tags:
      - auth
  /oauth/callback:
    post:
      consumes:
      - application/json
      description: Oauth Callback
      parameters:
      - description: Oauth Callback Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OauthCallbackRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AuthResponseBody'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Oauth Callback
      tags:
      - auth
  /print-jobs/cancel/{id}:
    post:
      description: Cancel Print Job
      parameters:
      - description: Print Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Cancel Print Job
      tags:
      - print jobs
  /print-jobs/list:
    get:
      description: List Print Jobs of a Printer
      parameters:
      - description: Printer ID
        in: path
        name: printerid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListPrintJobResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: List Print Jobs
      tags:
      - print jobs
  /print-jobs/monitor/{id}:
    get:
      description: View Print Job Status
      parameters:
      - description: Print Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PrintJobResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: View Print Job Status
      tags:
      - print jobs
  /print-jobs/submit:
    post:
      consumes:
      - application/json
      description: Submit Print Job
      parameters:
      - description: Submit Print Job Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.SubmitPrintJobRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PrintJobResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Submit Print Job
      tags:
      - print jobs
  /printers/add:
    post:
      consumes:
      - application/json
      description: Add New Printer
      parameters:
      - description: Add Printer Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.AddPrinterRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PrinterResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: Add Printer
      tags:
      - printers
  /printers/info/{id}:
    get:
      description: View Printer Detail
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PrinterResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: View Printer Detail
      tags:
      - printers
  /printers/list:
    get:
      consumes:
      - application/json
      description: List All Printers
      parameters:
      - description: Cluster ID
        in: query
        name: cluster_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListPrinterResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: List Printer
      tags:
      - printers
  /printers/monitor/{id}:
    get:
      description: View Printer Status
      parameters:
      - description: Printer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/wrapper.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PrinterStatusResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/wrapper.FailResponse'
      security:
      - Bearer: []
      summary: View Printer Status
      tags:
      - printers
securityDefinitions:
  AccessToken:
    description: Enter the token with the `Bearer ` prefix, e.g. `Bearer jwt_token_string`.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
